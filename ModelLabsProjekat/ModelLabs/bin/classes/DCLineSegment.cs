//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FTN {
    using System;
    using FTN;
    
    
    /// A wire or combination of wires not insulated from one another, with consistent electrical characteristics, used to carry direct current between points in the DC region of the power system.
    public class DCLineSegment : Conductor {
        
        /// Inductance of the DC line segment.
        private System.Single? cim_dcSegmentInductance;
        
        private const bool isDcSegmentInductanceMandatory = false;
        
        private const string _dcSegmentInductancePrefix = "cim";
        
        /// Resistance of the DC line segment.
        private System.Single? cim_dcSegmentResistance;
        
        private const bool isDcSegmentResistanceMandatory = false;
        
        private const string _dcSegmentResistancePrefix = "cim";
        
        public virtual float DcSegmentInductance {
            get {
                return this.cim_dcSegmentInductance.GetValueOrDefault();
            }
            set {
                this.cim_dcSegmentInductance = value;
            }
        }
        
        public virtual bool DcSegmentInductanceHasValue {
            get {
                return this.cim_dcSegmentInductance != null;
            }
        }
        
        public static bool IsDcSegmentInductanceMandatory {
            get {
                return isDcSegmentInductanceMandatory;
            }
        }
        
        public static string DcSegmentInductancePrefix {
            get {
                return _dcSegmentInductancePrefix;
            }
        }
        
        public virtual float DcSegmentResistance {
            get {
                return this.cim_dcSegmentResistance.GetValueOrDefault();
            }
            set {
                this.cim_dcSegmentResistance = value;
            }
        }
        
        public virtual bool DcSegmentResistanceHasValue {
            get {
                return this.cim_dcSegmentResistance != null;
            }
        }
        
        public static bool IsDcSegmentResistanceMandatory {
            get {
                return isDcSegmentResistanceMandatory;
            }
        }
        
        public static string DcSegmentResistancePrefix {
            get {
                return _dcSegmentResistancePrefix;
            }
        }
    }
}
